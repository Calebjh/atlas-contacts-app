syntax = "proto3";

package api.contacts;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "orm/orm.proto";

option (orm.package) = "github.com/infobloxopen/atlas-contacts-app/orm";

message Contact {
    option (orm.opts).ormable = true;
    uint64 id = 1;
    string first_name = 2;
    string middle_name = 3;
    string last_name = 4;
    string email_address = 5 [(validate.rules).string.email = true];
}

// eventually this will be replaced with a Page that uses the paging info
message ContactPage {
    repeated Contact results = 1;
}

// eventually this will be replaced with a standard search request
message SearchRequest {
    string first_name = 1;
}

message GetRequest {
    uint64 id = 1;
}

service Contacts {
    rpc Search (SearchRequest) returns (ContactPage) {
        option (google.api.http) = {
            get: "/contacts"
        };
    }

    rpc Create (Contact) returns (Contact) {
        option (google.api.http) = {
            post: "/contacts"
            body: "*"
        };
    }

    rpc Get (GetRequest) returns (Contact) {
        option (google.api.http) = {
            get: "/contacts/{id}"
        };
    }

    rpc Update (Contact) returns (Contact) {
        option (google.api.http) = {
            put: "/contacts/{id}"
            body: "*"
        };
    }

    rpc Delete (GetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/contacts/{id}"
        };
    }
}

option go_package = "github.com/infobloxopen/atlas-contacts-app/pb/contacts;contacts";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Contacts";
    version: "1.0";
    contact: {
      name: "John Belamaric";
      url: "https://github.com/infobloxopen/atlas-contacts-app";
      email: "jbelamaric@infoblox.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};
