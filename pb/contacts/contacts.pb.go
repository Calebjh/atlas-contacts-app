// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/infobloxopen/atlas-contacts-app/proto/contacts.proto

/*
Package contacts is a generated protocol buffer package.

It is generated from these files:
	github.com/infobloxopen/atlas-contacts-app/proto/contacts.proto

It has these top-level messages:
	Contact
	ContactPage
	SearchRequest
	GetRequest
*/
package contacts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "orm"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Contact struct {
	Id           uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	FirstName    string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	MiddleName   string `protobuf:"bytes,3,opt,name=middle_name,json=middleName" json:"middle_name,omitempty"`
	LastName     string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	EmailAddress string `protobuf:"bytes,5,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Contact) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Contact) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Contact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Contact) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

// eventually this will be replaced with a Page that uses the paging info
type ContactPage struct {
	Results []*Contact `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *ContactPage) Reset()                    { *m = ContactPage{} }
func (m *ContactPage) String() string            { return proto.CompactTextString(m) }
func (*ContactPage) ProtoMessage()               {}
func (*ContactPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContactPage) GetResults() []*Contact {
	if m != nil {
		return m.Results
	}
	return nil
}

// eventually this will be replaced with a standard search request
type SearchRequest struct {
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SearchRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

type GetRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Contact)(nil), "api.contacts.Contact")
	proto.RegisterType((*ContactPage)(nil), "api.contacts.ContactPage")
	proto.RegisterType((*SearchRequest)(nil), "api.contacts.SearchRequest")
	proto.RegisterType((*GetRequest)(nil), "api.contacts.GetRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Contacts service

type ContactsClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*ContactPage, error)
	Create(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Contact, error)
	Update(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error)
	Delete(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type contactsClient struct {
	cc *grpc.ClientConn
}

func NewContactsClient(cc *grpc.ClientConn) ContactsClient {
	return &contactsClient{cc}
}

func (c *contactsClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*ContactPage, error) {
	out := new(ContactPage)
	err := grpc.Invoke(ctx, "/api.contacts.Contacts/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) Create(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error) {
	out := new(Contact)
	err := grpc.Invoke(ctx, "/api.contacts.Contacts/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Contact, error) {
	out := new(Contact)
	err := grpc.Invoke(ctx, "/api.contacts.Contacts/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) Update(ctx context.Context, in *Contact, opts ...grpc.CallOption) (*Contact, error) {
	out := new(Contact)
	err := grpc.Invoke(ctx, "/api.contacts.Contacts/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) Delete(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/api.contacts.Contacts/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Contacts service

type ContactsServer interface {
	Search(context.Context, *SearchRequest) (*ContactPage, error)
	Create(context.Context, *Contact) (*Contact, error)
	Get(context.Context, *GetRequest) (*Contact, error)
	Update(context.Context, *Contact) (*Contact, error)
	Delete(context.Context, *GetRequest) (*google_protobuf.Empty, error)
}

func RegisterContactsServer(s *grpc.Server, srv ContactsServer) {
	s.RegisterService(&_Contacts_serviceDesc, srv)
}

func _Contacts_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.contacts.Contacts/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.contacts.Contacts/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Create(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.contacts.Contacts/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Contact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.contacts.Contacts/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Update(ctx, req.(*Contact))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.contacts.Contacts/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).Delete(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contacts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.contacts.Contacts",
	HandlerType: (*ContactsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Contacts_Search_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Contacts_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Contacts_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Contacts_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Contacts_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/infobloxopen/atlas-contacts-app/proto/contacts.proto",
}

func init() {
	proto.RegisterFile("github.com/infobloxopen/atlas-contacts-app/proto/contacts.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6e, 0x13, 0x31,
	0x18, 0xd5, 0x4c, 0x4a, 0xda, 0x38, 0x6d, 0x54, 0x0c, 0x94, 0x64, 0x5a, 0x44, 0x34, 0xab, 0xaa,
	0x22, 0x36, 0x84, 0x5d, 0x2a, 0x01, 0x6d, 0x41, 0x95, 0x10, 0xaa, 0x20, 0x15, 0x1b, 0x24, 0x54,
	0x9c, 0x99, 0x2f, 0x13, 0x57, 0x9e, 0xb1, 0xb1, 0x1d, 0xa0, 0x42, 0x6c, 0xb8, 0x00, 0x12, 0x6c,
	0x38, 0x00, 0x6b, 0xf6, 0xed, 0x8a, 0x3b, 0x70, 0x05, 0x36, 0xdc, 0x02, 0xc5, 0x93, 0xe9, 0x4f,
	0x1a, 0x10, 0xdd, 0x8d, 0xdf, 0x7b, 0xdf, 0xf3, 0xfb, 0xec, 0xf9, 0x8c, 0xee, 0x27, 0xdc, 0x0e,
	0x86, 0x3d, 0x12, 0xc9, 0x94, 0xf2, 0xac, 0x2f, 0x7b, 0x42, 0xbe, 0x93, 0x0a, 0x32, 0xca, 0xac,
	0x60, 0xa6, 0x15, 0xc9, 0xcc, 0xb2, 0xc8, 0x9a, 0x16, 0x53, 0x8a, 0x2a, 0x2d, 0xad, 0xa4, 0x05,
	0x44, 0xdc, 0x12, 0xcf, 0x33, 0xc5, 0x49, 0x81, 0x05, 0xcb, 0x89, 0x94, 0x89, 0x80, 0x5c, 0xda,
	0x1b, 0xf6, 0x29, 0xa4, 0xca, 0x1e, 0xe4, 0xd2, 0x60, 0x65, 0x4c, 0x32, 0xc5, 0x29, 0xcb, 0x32,
	0x69, 0x99, 0xe5, 0x32, 0x1b, 0x1b, 0x05, 0xeb, 0xa7, 0x92, 0x88, 0x83, 0xbe, 0xcd, 0x3d, 0xa2,
	0x56, 0x02, 0x59, 0xeb, 0x0d, 0x13, 0x3c, 0x66, 0x16, 0xe8, 0xb9, 0x8f, 0x71, 0xf1, 0xad, 0x53,
	0x62, 0xf3, 0x96, 0x25, 0x09, 0x68, 0x2a, 0x95, 0xb3, 0x9f, 0xb2, 0xd5, 0x82, 0xd4, 0x29, 0x95,
	0x3a, 0xcd, 0x97, 0xe1, 0x77, 0x0f, 0xcd, 0x6e, 0xe5, 0x1d, 0xe0, 0x1a, 0xf2, 0x79, 0x5c, 0xf7,
	0x9a, 0xde, 0xea, 0x4c, 0xd7, 0xe7, 0x31, 0xbe, 0x81, 0x50, 0x9f, 0x6b, 0x63, 0xf7, 0x32, 0x96,
	0x42, 0xdd, 0x6f, 0x7a, 0xab, 0x95, 0x6e, 0xc5, 0x21, 0x3b, 0x2c, 0x05, 0x7c, 0x13, 0x55, 0x53,
	0x1e, 0xc7, 0x02, 0x72, 0xbe, 0xe4, 0x78, 0x94, 0x43, 0x4e, 0xb0, 0x8c, 0x2a, 0x82, 0x15, 0xe5,
	0x33, 0x8e, 0x9e, 0x1b, 0x01, 0x8e, 0x24, 0x68, 0x01, 0x52, 0xc6, 0xc5, 0x1e, 0x8b, 0x63, 0x0d,
	0xc6, 0xd4, 0x2f, 0x8d, 0x04, 0x9b, 0x95, 0xa3, 0xdf, 0x3f, 0x4a, 0x33, 0xda, 0x7f, 0xe5, 0x75,
	0xe7, 0x1d, 0xbf, 0x91, 0xd3, 0x9d, 0xf2, 0xd1, 0x61, 0xc3, 0x9f, 0xf3, 0xc2, 0x7b, 0xa8, 0x3a,
	0xce, 0xfb, 0x94, 0x25, 0x80, 0x29, 0x9a, 0xd5, 0x60, 0x86, 0xc2, 0x9a, 0xba, 0xd7, 0x2c, 0xad,
	0x56, 0xdb, 0xd7, 0xc8, 0xe9, 0x4b, 0x21, 0x63, 0x6d, 0xb7, 0x50, 0x85, 0x04, 0x2d, 0xec, 0x02,
	0xd3, 0xd1, 0xa0, 0x0b, 0xaf, 0x87, 0x60, 0xec, 0x44, 0x97, 0xde, 0x44, 0x97, 0xe1, 0x0a, 0x42,
	0xdb, 0x60, 0x0b, 0xf1, 0xc4, 0x11, 0xb5, 0xbf, 0x95, 0xd0, 0xdc, 0x78, 0x0b, 0x83, 0x77, 0x51,
	0x39, 0xb7, 0xc6, 0xcb, 0x67, 0x43, 0x9c, 0xd9, 0x30, 0x68, 0x4c, 0x4d, 0x38, 0xea, 0x26, 0xbc,
	0xfc, 0xf1, 0xe7, 0xaf, 0x2f, 0x7e, 0x15, 0x57, 0x8e, 0xff, 0x34, 0xfc, 0x04, 0x95, 0xb7, 0x34,
	0x30, 0x0b, 0x78, 0x7a, 0x67, 0xc1, 0x74, 0x38, 0xbc, 0xea, 0xac, 0x6a, 0xe1, 0x89, 0x55, 0xc7,
	0x5b, 0xc3, 0x3b, 0xa8, 0xb4, 0x0d, 0x16, 0xd7, 0xcf, 0xd6, 0x9c, 0x34, 0xf8, 0x37, 0xb7, 0x25,
	0xe7, 0xb6, 0x88, 0x6b, 0xc7, 0x6e, 0xf4, 0x3d, 0x8f, 0x3f, 0xe0, 0x67, 0xa8, 0xfc, 0x5c, 0xc5,
	0x17, 0x4f, 0xd7, 0x70, 0x7e, 0x57, 0x82, 0x09, 0xbf, 0x51, 0xc4, 0x2e, 0x2a, 0x3f, 0x04, 0x01,
	0x16, 0xfe, 0x91, 0x72, 0x89, 0xe4, 0xe3, 0x44, 0x8a, 0x59, 0x23, 0x8f, 0x46, 0xb3, 0x56, 0xc4,
	0x5c, 0x9b, 0xb0, 0xdd, 0xfc, 0xe4, 0x7f, 0xde, 0xf8, 0xea, 0xe1, 0xec, 0xe4, 0xb2, 0xc2, 0x97,
	0xa8, 0xf6, 0x58, 0x0e, 0xb2, 0xe6, 0x26, 0x08, 0x96, 0x32, 0xcd, 0x23, 0xdc, 0x1e, 0x58, 0xab,
	0x4c, 0x87, 0xd2, 0xff, 0x7f, 0x16, 0x82, 0xeb, 0xfb, 0xbd, 0xa2, 0xfe, 0x41, 0xa1, 0x1d, 0x15,
	0xb6, 0x4b, 0x77, 0xc8, 0xed, 0x35, 0xdf, 0xf3, 0xdb, 0x8b, 0x4c, 0x29, 0xc1, 0x23, 0x37, 0x83,
	0x74, 0xdf, 0xc8, 0xac, 0x73, 0x0e, 0x39, 0x3a, 0x6c, 0x90, 0x0b, 0x3c, 0x45, 0x52, 0xa7, 0x2f,
	0x2e, 0xf4, 0x74, 0xf5, 0x8e, 0x4f, 0x63, 0xbd, 0xf8, 0xe8, 0x95, 0xdd, 0xc9, 0xdd, 0xfd, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x44, 0x77, 0xab, 0x04, 0x05, 0x00, 0x00,
}
